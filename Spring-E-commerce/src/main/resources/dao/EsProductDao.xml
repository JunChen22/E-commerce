<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring.ecommerce.demo.springecommerce.dao.EsProductDao">
    <resultMap id="BaseResultMap" type="com.example.spring.ecommerce.demo.springecommerce.elasticsearch.document.EsProduct" autoMapping="true">
        <id column="id" jdbcType="BIGINT" property="id" />
        <collection property="attrValueList" columnPrefix="attr_" ofType="com.example.spring.ecommerce.demo.springecommerce.elasticsearch.document.EsProductAttribute">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="name" property="name"/>
            <result column="type" property="type"/>
            <result column="value" property="value" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <select id="getAllEsProductList" resultMap="BaseResultMap">
        SELECT
        p.id AS id,
        p.sn AS productSn,
        p.brand_name AS brandName,
        p.category_name AS categoryName,
        p.name AS name,
        p.sub_title AS subTitle,
        p.keywords AS keywords,
        p.original_price AS price,
        p.sale_price AS salePrice,
        p.new_status AS newStatus,
        p.recommend_status AS recommendStatus,
        p.stock AS stock,
        p.promotion_type AS promotionType,
        pa.id AS attr_id,
        pac.name AS attr_name,
        pat.name AS attr_type,
        pa.attribute_value AS attr_value
        FROM product AS p
        LEFT JOIN product_attribute_category AS pac ON pac.id = p.attribute_category_id
        LEFT JOIN product_attribute_type AS pat ON pat.attribute_category_id = pac.id
        LEFT JOIN product_attribute AS pa ON pa.product_id = p.id AND pa.attribute_type_id = pat.id
        WHERE p.delete_status = 0 AND publish_status = 1;
    </select>
</mapper>