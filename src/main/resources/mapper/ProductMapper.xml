<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring.ecommerce.demo.springecommerce.mbg.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.example.spring.ecommerce.demo.springecommerce.mbg.model.Product">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="brand_id" jdbcType="NUMERIC" property="brandId" />
    <result column="category_id" jdbcType="NUMERIC" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="NUMERIC" property="price" />
    <result column="sale_price" jdbcType="NUMERIC" property="salePrice" />
    <result column="stock" jdbcType="NUMERIC" property="stock" />
    <result column="description_album" jdbcType="VARCHAR" property="descriptionAlbum" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, brand_id, category_id, name, picture, description, price, sale_price, stock, 
    description_album, status
  </sql>
  <select id="selectByExample" parameterType="com.example.spring.ecommerce.demo.springecommerce.mbg.model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.spring.ecommerce.demo.springecommerce.mbg.model.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.spring.ecommerce.demo.springecommerce.mbg.model.Product" useGeneratedKeys="true">
    insert into product (brand_id, category_id, name, 
      picture, description, price, 
      sale_price, stock, description_album, 
      status)
    values (#{brandId,jdbcType=NUMERIC}, #{categoryId,jdbcType=NUMERIC}, #{name,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, 
      #{salePrice,jdbcType=NUMERIC}, #{stock,jdbcType=NUMERIC}, #{descriptionAlbum,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.spring.ecommerce.demo.springecommerce.mbg.model.Product" useGeneratedKeys="true">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="descriptionAlbum != null">
        description_album,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        #{brandId,jdbcType=NUMERIC},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=NUMERIC},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=NUMERIC},
      </if>
      <if test="salePrice != null">
        #{salePrice,jdbcType=NUMERIC},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=NUMERIC},
      </if>
      <if test="descriptionAlbum != null">
        #{descriptionAlbum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.spring.ecommerce.demo.springecommerce.mbg.model.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=NUMERIC},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=NUMERIC},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=NUMERIC},
      </if>
      <if test="record.salePrice != null">
        sale_price = #{record.salePrice,jdbcType=NUMERIC},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=NUMERIC},
      </if>
      <if test="record.descriptionAlbum != null">
        description_album = #{record.descriptionAlbum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=NUMERIC},
      category_id = #{record.categoryId,jdbcType=NUMERIC},
      name = #{record.name,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=NUMERIC},
      sale_price = #{record.salePrice,jdbcType=NUMERIC},
      stock = #{record.stock,jdbcType=NUMERIC},
      description_album = #{record.descriptionAlbum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>